{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.me = async () => {\n      let auth = this.getCurrentUser();\n      let token = auth.access_token;\n      let res = await axios.get(\"http://localhost:8000/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return res.data;\n    };\n  }\n\n  login(email, password) {\n    return axios.post(\"http://localhost:8000/api/auth/login\", {\n      email,\n      password\n    }).then(response => {\n      if (response.data.access_token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(name, email, password) {\n    return axios.post(\"http://localhost:8000/api/auth/register\", {\n      name,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/home/luffy/www/InnoscriptaTask/client/src/services/auth-service.js"],"names":["axios","AuthService","me","auth","getCurrentUser","token","access_token","res","get","headers","Authorization","data","login","email","password","post","then","response","localStorage","setItem","JSON","stringify","logout","removeItem","register","name","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAoBhBC,EApBgB,GAoBX,YAAY;AACf,UAAIC,IAAI,GAAG,KAAKC,cAAL,EAAX;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACG,YAAjB;AACA,UAAIC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,mCAAV,EAA+C;AAC7DC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASL,KAAM;AADxB;AADoD,OAA/C,CAAhB;AAKA,aAAOE,GAAG,CAACI,IAAX;AACD,KA7Be;AAAA;;AAChBC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACrB,WAAOd,KAAK,CACTe,IADI,CACC,sCADD,EACyC;AAC5CF,MAAAA,KAD4C;AAE5CC,MAAAA;AAF4C,KADzC,EAKJE,IALI,CAKEC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACN,IAAT,CAAcL,YAAlB,EAAgC;AAC9BY,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACN,IAAxB,CAA7B;AACD;;AAED,aAAOM,QAAQ,CAACN,IAAhB;AACD,KAXI,CAAP;AAYD;;AAEDW,EAAAA,MAAM,GAAG;AACPJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD;;AAaDC,EAAAA,QAAQ,CAACC,IAAD,EAAOZ,KAAP,EAAcC,QAAd,EAAwB;AAC9B,WAAOd,KAAK,CAACe,IAAN,CAAW,yCAAX,EAAsD;AAC3DU,MAAAA,IAD2D;AAE3DZ,MAAAA,KAF2D;AAG3DC,MAAAA;AAH2D,KAAtD,CAAP;AAKD;;AAEDV,EAAAA,cAAc,GAAG;AACf,WAAOgB,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;;AAzCe;;AA4ClB,eAAe,IAAI1B,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post(\"http://localhost:8000/api/auth/login\", {\n        email,\n        password,\n      })\n      .then((response) => {\n        if (response.data.access_token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  me = async () => {\n    let auth = this.getCurrentUser();\n    let token = auth.access_token;\n    let res = await axios.get(\"http://localhost:8000/api/auth/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  };\n\n  register(name, email, password) {\n    return axios.post(\"http://localhost:8000/api/auth/register\", {\n      name,\n      email,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}